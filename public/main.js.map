{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/cell.js","webpack:///./src/game.js","webpack:///./src/gameField.js","webpack:///./src/index.js","webpack:///./src/score.js","webpack:///./src/snake.js","webpack:///./src/stage.js","webpack:///./src/text.js","webpack:///./src/welcomeScreen.js"],"names":["Cell","canvas","col","row","w","h","bgColor","cell","color","render","ctx","getContext","x","y","setDefaultColor","drawRect","strokeStyle","strokeRect","fillRect","fillStyle","Game","mp","game","init","window","score","fps","lastTime","Date","now","createStage","stage","Stage","create","root","onWelcomeScreenClick","startGame","setMode","GAME_MODES","STARTED","renderSnake","addEventListeners","loop","collision","stopGame","fpsInterval","currentTime","elapsedTime","requestedFrame","requestAnimationFrame","update","checkApple","renderStage","move","checkCollisions","snake","console","log","intervalId","cancelAnimationFrame","cellSize","Snake","head","isEat","grow","updateApple","checkStageCollision","checkSelfCollision","widthInCells","heightInCells","dir","setDirection","document","addEventListener","e","key","DIRECTIONS","BOTTOM","TOP","RIGHT","LEFT","apple","GameField","options","width","height","cellW","cellH","createWithColor","drawField","body","querySelector","Score","textContent","Text","onMove","onSelfCollision","direction","_canvas","_cellSize","_length","_direction","_collision","_segments","createSegment","hasCollision","i","length","isNewDirectionValid","getNewHeadCoordinates","push","forEach","segment","moveHead","unshift","pop","newDir","PENDING","mode","gameMode","Math","ceil","random","field","appleCoords","getRandomCell","renderApple","createCanvas","welcomeScreen","WelcomeScreen","onClick","createElement","style","border","appendChild","drawScore","renderWelcomeScreen","textAlign","textColor","font","fillText","align","screen","clickHandler","bind","drawBackground","renderText","text","removeEventListener"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","export class Cell {\n  static createWithColor({ canvas, col, row, w, h, bgColor }) {\n    const cell = new Cell({ canvas, col, row, w, h });\n    cell.color = bgColor;\n    cell.render();\n    return cell;\n  }\n\n  static create({ canvas, col, row, w, h }) {\n    const cell = new Cell({ canvas, col, row, w, h });\n    cell.render();\n    return cell;\n  }\n\n  constructor({ canvas, col, row, w, h }) {\n    this.ctx = canvas.getContext('2d');\n    this.w = w;\n    this.h = h;\n    this.col = col;\n    this.row = row;\n    this.x = col * this.w;\n    this.y = row * this.h;\n\n    this.setDefaultColor();\n  }\n\n  /**\n   * *\n   * @param {string} color\n   */\n  set color(color) {\n    this.ctx.fillStyle = color;\n  }\n\n  get color() {\n    return this.ctx.fillStyle;\n  }\n\n  render() {\n    this.drawRect();\n    this.ctx.strokeStyle = 'grey';\n    this.ctx.strokeRect(this.x, this.y, this.w, this.h);\n  }\n\n  clear() {\n    this.setDefaultColor();\n    this.render();\n  }\n\n  drawRect() {\n    this.ctx.fillRect(this.x, this.y, this.w, this.h);\n  }\n\n  setDefaultColor() {\n    this.ctx.fillStyle = this.col % 2 === 0 ? 'white' : 'white';\n  }\n}\n","import { Stage, GAME_MODES } from './stage.js';\nimport { Snake, DIRECTIONS } from './snake.js';\n\nexport class Game {\n  /**\n   * @param {DOMElement} mp mountPoint where to render game\n   */\n  static create(mp) {\n    const game = new Game(mp);\n    game.init();\n    window.game = game;\n    return game;\n  }\n\n  /**\n   * @param {DOMElement} mp mountPoint where to render game\n   */\n  constructor(mp) {\n    this.mp = mp;\n    this.score = 0;\n    this.fps = 3;\n    this.lastTime = Date.now();\n  }\n\n  get appleCoords() {\n    return this.stage.apple;\n  }\n\n  init() {\n    this.createStage();\n  }\n\n  createStage() {\n    this.stage = Stage.create({\n      root: this.mp,\n      onWelcomeScreenClick: () => this.startGame()\n    });\n  }\n\n  startGame() {\n    this.stage.setMode(GAME_MODES.STARTED);\n    this.renderSnake();\n    this.addEventListeners();\n    this.loop();\n  }\n\n  loop() {\n    if (this.collision) {\n      this.stopGame();\n      return;\n    }\n    const fpsInterval = 1000 / this.fps;\n    const currentTime = Date.now();\n    const elapsedTime = currentTime - this.lastTime;\n    this.requestedFrame = window.requestAnimationFrame(() => {\n      if (elapsedTime > fpsInterval) {\n        this.update();\n        this.lastTime = currentTime - elapsedTime % fpsInterval;\n      }\n      this.loop();\n    });\n  }\n\n  update() {\n    this.checkApple();\n    this.renderStage();\n    this.move();\n    this.checkCollisions();\n  }\n\n  renderStage() {\n    this.stage.score = this.score;\n    this.stage.render();\n  }\n\n  move() {\n    this.snake.move();\n    this.snake.render();\n  }\n\n  stopGame() {\n    console.log(this.intervalId);\n    window.cancelAnimationFrame(this.requestedFrame);\n    console.log('GAME OVER');\n  }\n\n  renderSnake() {\n    const { canvas, cellSize } = this.stage;\n    this.snake = Snake.create({\n      canvas,\n      cellSize\n    });\n  }\n\n  checkApple() {\n    const { col, row } = this.snake.head;\n    if (this.stage.isEat({ col, row })) {\n      this.snake.grow();\n      this.score += 1;\n      this.stage.updateApple();\n    }\n  }\n\n  checkCollisions() {\n    const { col, row } = this.snake.head;\n    this.collision =\n      this.checkStageCollision(col, row) || this.snake.checkSelfCollision();\n  }\n\n  checkStageCollision(col, row) {\n    return (\n      col >= this.stage.widthInCells ||\n      row >= this.stage.heightInCells ||\n      col < 0 ||\n      row < 0\n    );\n  }\n\n  setDirection(dir) {\n    this.snake.setDirection(dir);\n  }\n\n  addEventListeners() {\n    document.addEventListener('keydown', e => {\n      switch (e.key) {\n        case 's':\n          this.setDirection(DIRECTIONS.BOTTOM);\n          break;\n        case 'w':\n          this.setDirection(DIRECTIONS.TOP);\n          break;\n        case 'd':\n          this.setDirection(DIRECTIONS.RIGHT);\n          break;\n        case 'a':\n          this.setDirection(DIRECTIONS.LEFT);\n          break;\n      }\n    });\n  }\n}\n","import { Cell } from './cell.js';\n/**\n * @typedef Params\n * @param {DOMElement} mp\n * @param {Number} width\n * @param {Number} height\n */\n\nexport class GameField {\n  /**\n   * @param {DOMElement} mp\n   * @param {Number} width\n   * @param {Number} height\n   */\n  static create(options) {\n    const stage = new GameField(options);\n    stage.render();\n    return stage;\n  }\n\n  /**\n   * @param {DOMElement} mp\n   * @param {Number} width\n   * @param {Number} height\n   */\n  constructor({ canvas, width, height, cellW, cellH }) {\n    this.cellW = cellW;\n    this.cellH = cellH;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n  }\n\n  get heightInCells() {\n    return this.height / this.cellH;\n  }\n\n  get widthInCells() {\n    return this.width / this.cellW;\n  }\n\n  checkApple({ col, row }) {\n    return this.apple.col === col && this.apple.row === row;\n  }\n\n  /**\n   *\n   * @param {Object} coords\n   * @param {number} coords.col\n   * @param {number} coords.row\n   */\n  renderApple({ col, row }) {\n    this.apple = Cell.createWithColor({\n      canvas: this.canvas,\n      col,\n      row,\n      w: this.cellW,\n      h: this.cellH,\n      bgColor: 'red'\n    });\n  }\n\n  render() {\n    this.drawField();\n  }\n\n  drawField() {\n    for (let row = 0; row < this.heightInCells; row += 1) {\n      for (let col = 0; col < this.widthInCells; col += 1) {\n        Cell.create({\n          canvas: this.canvas,\n          col,\n          row,\n          w: this.cellW,\n          h: this.cellH\n        });\n      }\n    }\n  }\n}\n","import { Game } from './game.js';\nconst body = document.querySelector('body');\nGame.create(body);\n","import { Text } from './text';\n\nexport class Score extends Text {\n  /**\n   * @param {object} options\n   * @param {HTMLCanvasElement} options.root\n   */\n  static create(options) {\n    const score = new Score(options);\n    score.render();\n    return score;\n  }\n\n  /**\n   * @param {object} options\n   * @param {HTMLCanvasElement} options.root\n   */\n  constructor(options) {\n    super(options);\n    this.textContent = options.score;\n  }\n\n  setScore(score) {\n    this.textContent = `${score}`;\n  }\n}\n","import { Cell } from './cell.js';\n/**\n * Directions enum\n * @readonly\n * @enum {number}\n */\nexport const DIRECTIONS = {\n  RIGHT: 0,\n  LEFT: 1,\n  TOP: 2,\n  BOTTOM: 3\n};\n\nexport class Snake {\n  static create({ canvas, cellSize, onMove, dir }) {\n    const snake = new Snake({ canvas, cellSize, onMove, dir });\n    snake.init();\n    snake.render();\n    return snake;\n  }\n\n  constructor({\n    canvas,\n    cellSize,\n    onMove,\n    onSelfCollision,\n    direction = DIRECTIONS.RIGHT\n  }) {\n    this._canvas = canvas;\n    this._cellSize = cellSize;\n    this._length = 2;\n    this._direction = direction;\n    this._collision = false;\n\n    this.onMove = onMove;\n    this.onSelfCollision = onSelfCollision;\n  }\n\n  get segments() {\n    return this._segments;\n  }\n\n  init() {\n    this._segments = [\n      this.createSegment(7, 5, true),\n      this.createSegment(6, 5),\n      this.createSegment(5, 5)\n    ];\n  }\n\n  checkSelfCollision() {\n    let hasCollision = false;\n    const [head] = this._segments;\n    for (let i = 1; i < this._segments.length; i += 1) {\n      if (\n        head.col === this._segments[i].col &&\n        head.row === this._segments[i].row\n      ) {\n        hasCollision = true;\n        break;\n      }\n    }\n    return hasCollision;\n  }\n\n  /**\n   * @param {string} dir\n   */\n  setDirection(dir) {\n    if (this.isNewDirectionValid(dir)) {\n      this._direction = dir;\n    }\n  }\n\n  grow() {\n    const { col, row } = this.getNewHeadCoordinates();\n    this._segments.push(this.createSegment(col, row));\n  }\n\n  /**\n   * @param {boolean} collision\n   *\n   */\n  setCollision(collision) {\n    this._collision = collision;\n  }\n\n  /**\n   * @return {Cell}\n   */\n  get head() {\n    return this._segments[0];\n  }\n\n  render() {\n    this._segments.forEach(segment => {\n      segment.render();\n    });\n  }\n\n  createSegment(col, row) {\n    const { w, h } = this._cellSize;\n    const segment = Cell.createWithColor({\n      canvas: this._canvas,\n      col,\n      row,\n      w,\n      h,\n      bgColor: 'aqua'\n    });\n    return segment;\n  }\n\n  move() {\n    const { col, row } = this.getNewHeadCoordinates();\n    this.moveHead(col, row);\n  }\n\n  moveHead(col, row) {\n    this._segments.unshift(this.createSegment(col, row));\n    this._segments.pop();\n  }\n\n  getNewHeadCoordinates() {\n    let { col, row } = this.head;\n    switch (this._direction) {\n      case DIRECTIONS.TOP:\n        row -= 1;\n        break;\n      case DIRECTIONS.LEFT:\n        col -= 1;\n        break;\n      case DIRECTIONS.BOTTOM:\n        row += 1;\n        break;\n      default:\n        col += 1;\n    }\n\n    return { col, row };\n  }\n\n  /**\n   * @param {number} newDir\n   * @return {boolean}\n   */\n  isNewDirectionValid(newDir) {\n    if (\n      (this._direction === DIRECTIONS.RIGHT ||\n        this._direction === DIRECTIONS.LEFT) &&\n      (newDir === DIRECTIONS.LEFT || newDir === DIRECTIONS.RIGHT)\n    ) {\n      return false;\n    }\n    if (\n      (this._direction === DIRECTIONS.TOP ||\n        this._direction === DIRECTIONS.BOTTOM) &&\n      (newDir === DIRECTIONS.TOP || newDir === DIRECTIONS.BOTTOM)\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n}\n","import { GameField } from './gameField';\nimport { Score } from './score';\nimport { WelcomeScreen } from './welcomeScreen';\n/**\n * @typedef Params\n * @param {DOMElement} root\n * @param {Number} width\n * @param {Number} height\n */\n\nexport const GAME_MODES = {\n  PENDING: 0,\n  STARTED: 1\n};\nexport class Stage {\n  /**\n   * @param {DOMElement} root\n   * @param {Number} width\n   * @param {Number} height\n   */\n  static create(options) {\n    const stage = new Stage(options);\n    stage.init();\n    return stage;\n  }\n\n  /**\n   * @param {object} o\n   * @param {DOMElement} o.root\n   * @param {Number} o.width\n   * @param {Number} o.height\n   * @param {function} o.onWelcomeScreenClick\n   */\n  constructor({ root, width = 320, height = 480, onWelcomeScreenClick }) {\n    this.cellW = 16;\n    this.cellH = 16;\n\n    this.root = root;\n    this.width = width;\n    this.height = height;\n    this.mode = GAME_MODES.PENDING;\n    this.onWelcomeScreenClick = onWelcomeScreenClick;\n  }\n\n  get heightInCells() {\n    return this.field.heightInCells;\n  }\n\n  get widthInCells() {\n    return this.field.widthInCells;\n  }\n\n  get cellSize() {\n    return { w: this.cellW, h: this.cellH };\n  }\n\n  setMode(gameMode) {\n    this.mode = gameMode;\n    this.render();\n  }\n\n  getRandomCell() {\n    const col = Math.ceil(Math.random() * this.widthInCells - 1);\n    const row = Math.ceil(Math.random() * this.heightInCells - 1);\n    return { col, row };\n  }\n\n  isEat({ col, row }) {\n    return this.field.checkApple({ col, row });\n  }\n\n  updateApple() {\n    this.appleCoords = this.getRandomCell();\n  }\n\n  /**\n   *\n   * @param {Object} coords\n   * @param {number} coords.col\n   * @param {number} coords.row\n   */\n  renderApple() {\n    if (!this.appleCoords) {\n      this.updateApple();\n    }\n    this.field.renderApple(this.appleCoords);\n  }\n\n  /**\n   * @returns {DOMElement}\n   */\n  init() {\n    this.createCanvas();\n    this.render();\n  }\n\n  renderWelcomeScreen() {\n    this.welcomeScreen = WelcomeScreen.create({\n      canvas: this.canvas,\n      w: this.width,\n      h: this.height,\n      onClick: this.onWelcomeScreenClick\n    });\n  }\n\n  createCanvas() {\n    this.canvas = document.createElement('canvas');\n    this.canvas.width = this.width;\n    this.canvas.height = this.height;\n    this.canvas.style.border = '1px solid red';\n\n    this.root.appendChild(this.canvas);\n  }\n\n  render() {\n    switch (this.mode) {\n      case GAME_MODES.STARTED:\n        this.drawField();\n        this.renderApple();\n        this.drawScore();\n        break;\n      case GAME_MODES.PENDING: {\n        this.renderWelcomeScreen();\n        break;\n      }\n    }\n  }\n\n  drawScore() {\n    this.score = Score.create({ canvas: this.canvas, score: this.score });\n  }\n\n  drawField() {\n    this.field = GameField.create({\n      canvas: this.canvas,\n      width: this.width,\n      height: this.height,\n      cellH: this.cellH,\n      cellW: this.cellW\n    });\n  }\n}\n","export class Text {\n  /**\n   * @param {object} options\n   * @param {HTMLCanvasElement} options.root\n   */\n  static create(options) {\n    const score = new Text(options);\n    score.render();\n    return score;\n  }\n\n  /**\n   * @param {object} options\n   * @param {HTMLCanvasElement} options.root\n   */\n  constructor({\n    canvas,\n    x = 0,\n    y = 0,\n    w,\n    h = 22,\n    textContent,\n    color = 'red',\n    textAlign = 'left'\n  }) {\n    this.ctx = canvas.getContext('2d');\n    this.x = x;\n    this.y = y;\n    this.h = h;\n    this.w = w;\n    this.textColor = color;\n    this.textContent = textContent;\n    this.textAlign = textAlign;\n  }\n\n  render() {\n    this.ctx.fillStyle = this.textColor;\n    this.ctx.font = `${this.h}px Helvetica`;\n    this.ctx.textAlign = this.textAlign;\n    this.ctx.fillText(this.textContent, this.x, this.y + this.h);\n  }\n\n  setText(textContent) {\n    this.textContent = textContent;\n  }\n\n  setAlign(align) {\n    this.textAlign = align;\n  }\n\n  setColor(color) {\n    this.textColor = color;\n  }\n}\n","import { Text } from './text';\n\nexport class WelcomeScreen {\n  static create(options) {\n    const screen = new WelcomeScreen(options);\n    screen.addEventListeners();\n    screen.render();\n    return screen;\n  }\n\n  constructor({ canvas, w, h, onClick }) {\n    this.canvas = canvas;\n    this.ctx = canvas.getContext('2d');\n    this.x = 0;\n    this.y = 0;\n    this.w = w;\n    this.h = h;\n    this.onClick = onClick;\n    this.clickHandler = this.clickHandler.bind(this);\n  }\n\n  render() {\n    this.drawBackground();\n    this.renderText();\n  }\n\n  renderText() {\n    this.text = Text.create({\n      canvas: this.canvas,\n      x: this.w / 2,\n      y: this.h / 2,\n      textContent: 'Start',\n      textAlign: 'center'\n    });\n  }\n\n  drawBackground() {\n    this.ctx.fillStyle = 'rgba(0,0,0, .2)';\n    this.ctx.fillRect(this.x, this.y, this.w, this.h);\n  }\n\n  clickHandler() {\n    this.onClick();\n    this.canvas.removeEventListener('click', this.clickHandler);\n  }\n\n  addEventListeners() {\n    this.canvas.addEventListener('click', this.clickHandler);\n  }\n}\n"],"sourceRoot":""}