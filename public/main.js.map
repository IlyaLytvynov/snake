{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/cell.js","webpack:///./src/game.css?9bdc","webpack:///./src/game.js","webpack:///./src/gameField.js","webpack:///./src/index.js","webpack:///./src/score.js","webpack:///./src/screen.js","webpack:///./src/snake.js","webpack:///./src/stage.js","webpack:///./src/text.js","webpack:///./src/utils.js","webpack:///./src/welcomeScreen.js"],"names":["Cell","canvas","col","row","w","h","bgColor","cell","color","render","ctx","getContext","x","y","setDefaultColor","drawRect","strokeStyle","strokeRect","fillRect","fillStyle","Game","mp","game","init","window","score","fps","lastTime","Date","now","createGameContainer","createStage","container","document","createElement","classList","add","append","stage","Stage","create","root","onWelcomeScreenClick","startGame","setMode","GAME_MODES","STARTED","renderSnake","addEventListeners","loop","collision","stopGame","fpsInterval","currentTime","elapsedTime","requestedFrame","requestAnimationFrame","update","checkApple","renderStage","move","checkCollisions","snake","console","log","intervalId","cancelAnimationFrame","cellSize","Snake","head","isEat","grow","updateApple","checkStageCollision","checkSelfCollision","widthInCells","heightInCells","dir","setDirection","addEventListener","e","key","DIRECTIONS","BOTTOM","TOP","RIGHT","LEFT","GameField","options","width","height","Math","floor","apple","createWithColor","drawField","body","querySelector","Score","textContent","normalizeScore","textColor","Text","Screen","MAX_WIDTH","MAX_HEIGHT","min","innerWidth","innerHeight","onMove","onSelfCollision","direction","_canvas","_cellSize","_direction","_segments","createSegment","hasCollision","i","length","isNewDirectionValid","getNewHeadCoordinates","push","forEach","segment","unshift","pop","newDir","PENDING","getViewportSize","mode","gameMode","ceil","random","field","appleCoords","getRandomCell","renderApple","createCanvas","welcomeScreen","WelcomeScreen","onClick","style","border","appendChild","drawScore","renderWelcomeScreen","textAlign","font","fillText","align","getCellColor","screen","clickHandler","bind","drawBackground","renderText","text","removeEventListener"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","export class Cell {\n  static createWithColor({ canvas, col, row, w, h, bgColor }) {\n    const cell = new Cell({ canvas, col, row, w, h });\n    cell.color = bgColor;\n    cell.render();\n    return cell;\n  }\n\n  static create({ canvas, col, row, w, h }) {\n    const cell = new Cell({ canvas, col, row, w, h });\n    cell.render();\n    return cell;\n  }\n\n  constructor({ canvas, col, row, w, h }) {\n    this.ctx = canvas.getContext('2d');\n    this.w = w;\n    this.h = h;\n    this.col = col;\n    this.row = row;\n    this.x = col * this.w;\n    this.y = row * this.h;\n\n    this.setDefaultColor();\n  }\n\n  /**\n   * *\n   * @param {string} color\n   */\n  set color(color) {\n    this.ctx.fillStyle = color;\n  }\n\n  get color() {\n    return this.ctx.fillStyle;\n  }\n\n  render() {\n    this.drawRect();\n    this.ctx.strokeStyle = 'grey';\n    this.ctx.strokeRect(this.x, this.y, this.w, this.h);\n  }\n\n  clear() {\n    this.setDefaultColor();\n    this.render();\n  }\n\n  drawRect() {\n    this.ctx.fillRect(this.x, this.y, this.w, this.h);\n  }\n\n  setDefaultColor() {\n    this.ctx.fillStyle = this.col % 2 === 0 ? 'white' : 'white';\n  }\n}\n","// extracted by mini-css-extract-plugin","import { Stage, GAME_MODES } from './stage.js';\nimport { Snake, DIRECTIONS } from './snake.js';\nimport './game.css';\n\nexport class Game {\n  /**\n   * @param {DOMElement} mp mountPoint where to render game\n   */\n  static create(mp) {\n    const game = new Game(mp);\n    game.init();\n    window.game = game;\n    return game;\n  }\n\n  /**\n   * @param {DOMElement} mp mountPoint where to render game\n   */\n  constructor(mp) {\n    this.mp = mp;\n    this.score = 0;\n    this.fps = 3;\n    this.lastTime = Date.now();\n  }\n\n  init() {\n    this.createGameContainer();\n    this.createStage();\n  }\n\n  createGameContainer() {\n    this.container = document.createElement('div');\n    this.container.classList.add('game-container');\n    this.mp.append(this.container);\n  }\n\n  createStage() {\n    this.stage = Stage.create({\n      root: this.container,\n      onWelcomeScreenClick: () => this.startGame()\n    });\n  }\n\n  startGame() {\n    this.stage.setMode(GAME_MODES.STARTED);\n    this.renderSnake();\n    this.addEventListeners();\n    this.loop();\n  }\n\n  loop() {\n    if (this.collision) {\n      this.stopGame();\n      return;\n    }\n    const fpsInterval = 1000 / this.fps;\n    const currentTime = Date.now();\n    const elapsedTime = currentTime - this.lastTime;\n    this.requestedFrame = window.requestAnimationFrame(() => {\n      if (elapsedTime > fpsInterval) {\n        this.update();\n        this.lastTime = currentTime - elapsedTime % fpsInterval;\n      }\n      this.loop();\n    });\n  }\n\n  update() {\n    this.checkApple();\n    this.renderStage();\n    this.move();\n    this.checkCollisions();\n  }\n\n  renderStage() {\n    this.stage.score = this.score;\n    this.stage.render();\n  }\n\n  move() {\n    this.snake.move();\n    this.snake.render();\n  }\n\n  stopGame() {\n    console.log(this.intervalId);\n    window.cancelAnimationFrame(this.requestedFrame);\n    console.log('GAME OVER');\n  }\n\n  renderSnake() {\n    const { canvas, cellSize } = this.stage;\n    this.snake = Snake.create({\n      canvas,\n      cellSize\n    });\n  }\n\n  checkApple() {\n    const { col, row } = this.snake.head;\n    if (this.stage.isEat({ col, row })) {\n      this.snake.grow();\n      this.score += 1;\n      this.stage.updateApple();\n    }\n  }\n\n  checkCollisions() {\n    const { col, row } = this.snake.head;\n    this.collision =\n      this.checkStageCollision(col, row) || this.snake.checkSelfCollision();\n  }\n\n  checkStageCollision(col, row) {\n    return (\n      col >= this.stage.widthInCells ||\n      row >= this.stage.heightInCells ||\n      col < 0 ||\n      row < 0\n    );\n  }\n\n  setDirection(dir) {\n    this.snake.setDirection(dir);\n  }\n\n  addEventListeners() {\n    document.addEventListener('keydown', e => {\n      switch (e.key) {\n        case 's':\n          this.setDirection(DIRECTIONS.BOTTOM);\n          break;\n        case 'w':\n          this.setDirection(DIRECTIONS.TOP);\n          break;\n        case 'd':\n          this.setDirection(DIRECTIONS.RIGHT);\n          break;\n        case 'a':\n          this.setDirection(DIRECTIONS.LEFT);\n          break;\n      }\n    });\n  }\n}\n","import { Cell } from './cell.js';\n\n/**\n * @typedef Params\n * @param {DOMElement} mp\n * @param {Number} width\n * @param {Number} height\n */\n\nexport class GameField {\n  /**\n   * @param {DOMElement} mp\n   * @param {Number} width\n   * @param {Number} height\n   */\n  static create(options) {\n    const stage = new GameField({ ...options });\n    stage.render();\n    return stage;\n  }\n\n  /**\n   * @param {DOMElement} mp\n   * @param {Number} width\n   * @param {Number} height\n   */\n  constructor({ canvas, width, height }) {\n    this.cellSize = Math.floor(width / 20);\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this.heightInCells = Math.floor(this.height / this.cellSize);\n    this.widthInCells = Math.floor(this.width / this.cellSize);\n  }\n\n  checkApple({ col, row }) {\n    return this.apple.col === col && this.apple.row === row;\n  }\n\n  /**\n   *\n   * @param {Object} coords\n   * @param {number} coords.col\n   * @param {number} coords.row\n   */\n  renderApple({ col, row }) {\n    this.apple = Cell.createWithColor({\n      canvas: this.canvas,\n      col,\n      row,\n      w: this.cellSize,\n      h: this.cellSize,\n      bgColor: 'red'\n    });\n  }\n\n  render() {\n    this.drawField();\n  }\n\n  drawField() {\n    for (let row = 0; row < this.heightInCells; row += 1) {\n      for (let col = 0; col < this.widthInCells; col += 1) {\n        Cell.create({\n          canvas: this.canvas,\n          col,\n          row,\n          w: this.cellSize,\n          h: this.cellSize\n        });\n      }\n    }\n  }\n}\n","import { Game } from './game.js';\nconst body = document.querySelector('body');\nGame.create(body);\n","import { Text } from './text';\nimport { normalizeScore } from './utils';\nexport class Score extends Text {\n  /**\n   * @param {object} options\n   * @param {HTMLCanvasElement} options.root\n   */\n  static create(options) {\n    const score = new Score(options);\n    score.render();\n    return score;\n  }\n\n  /**\n   * @param {object} options\n   * @param {HTMLCanvasElement} options.root\n   */\n  constructor(options) {\n    super(options);\n    this.textContent = normalizeScore(options.score);\n    this.textColor = 'magenta';\n    this.x = 10;\n  }\n\n  setScore(score) {\n    this.textContent = normalizeScore(score);\n  }\n}\n","export class Screen {\n  static getViewportSize() {\n    const MAX_WIDTH = 1600;\n    const MAX_HEIGHT = 1600;\n    return {\n      width: Math.min(window.innerWidth, MAX_WIDTH),\n      height: Math.min(window.innerHeight, MAX_HEIGHT)\n    };\n  }\n}\n","import { Cell } from './cell.js';\n/**\n * Directions enum\n * @readonly\n * @enum {number}\n */\nexport const DIRECTIONS = {\n  RIGHT: 0,\n  LEFT: 1,\n  TOP: 2,\n  BOTTOM: 3\n};\n\nexport class Snake {\n  static create({ canvas, cellSize, onMove, dir }) {\n    const snake = new Snake({ canvas, cellSize, onMove, dir });\n    snake.init();\n    snake.render();\n    return snake;\n  }\n\n  constructor({\n    canvas,\n    cellSize,\n    onMove,\n    onSelfCollision,\n    direction = DIRECTIONS.RIGHT\n  }) {\n    this._canvas = canvas;\n    this._cellSize = cellSize;\n    this._direction = direction;\n\n    this.onMove = onMove;\n    this.onSelfCollision = onSelfCollision;\n  }\n\n  init() {\n    this._segments = [\n      this.createSegment(7, 5),\n      this.createSegment(6, 5),\n      this.createSegment(5, 5)\n    ];\n  }\n\n  checkSelfCollision() {\n    let hasCollision = false;\n    const [head] = this._segments;\n    for (let i = 1; i < this._segments.length; i += 1) {\n      if (\n        head.col === this._segments[i].col &&\n        head.row === this._segments[i].row\n      ) {\n        hasCollision = true;\n        break;\n      }\n    }\n    return hasCollision;\n  }\n\n  /**\n   * @param {DIRECTIONS} dir\n   */\n  setDirection(dir) {\n    if (this.isNewDirectionValid(dir)) {\n      this._direction = dir;\n    }\n  }\n\n  grow() {\n    const { col, row } = this.getNewHeadCoordinates();\n    this._segments.push(this.createSegment(col, row));\n  }\n\n  /**\n   * @return {Cell}\n   */\n  get head() {\n    return this._segments[0];\n  }\n\n  render() {\n    this._segments.forEach(segment => {\n      segment.render();\n    });\n  }\n\n  createSegment(col, row) {\n    const segment = Cell.createWithColor({\n      canvas: this._canvas,\n      col,\n      row,\n      w: this._cellSize,\n      h: this._cellSize,\n      bgColor: 'aqua'\n    });\n    return segment;\n  }\n\n  move() {\n    const { col, row } = this.getNewHeadCoordinates();\n    this._segments.unshift(this.createSegment(col, row));\n    this._segments.pop();\n  }\n\n  getNewHeadCoordinates() {\n    let { col, row } = this.head;\n    switch (this._direction) {\n      case DIRECTIONS.TOP:\n        row -= 1;\n        break;\n      case DIRECTIONS.LEFT:\n        col -= 1;\n        break;\n      case DIRECTIONS.BOTTOM:\n        row += 1;\n        break;\n      default:\n        col += 1;\n    }\n\n    return { col, row };\n  }\n\n  /**\n   * @param {number} newDir\n   * @return {boolean}\n   */\n  isNewDirectionValid(newDir) {\n    if (\n      (this._direction === DIRECTIONS.RIGHT ||\n        this._direction === DIRECTIONS.LEFT) &&\n      (newDir === DIRECTIONS.LEFT || newDir === DIRECTIONS.RIGHT)\n    ) {\n      return false;\n    }\n    if (\n      (this._direction === DIRECTIONS.TOP ||\n        this._direction === DIRECTIONS.BOTTOM) &&\n      (newDir === DIRECTIONS.TOP || newDir === DIRECTIONS.BOTTOM)\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n}\n","import { GameField } from './gameField';\nimport { Score } from './score';\nimport { WelcomeScreen } from './welcomeScreen';\nimport { Screen } from './screen';\n/**\n * @typedef Params\n * @param {DOMElement} root\n * @param {Number} width\n * @param {Number} height\n */\n\nexport const GAME_MODES = {\n  PENDING: 0,\n  STARTED: 1\n};\nexport class Stage {\n  /**\n   * @param {DOMElement} root\n   */\n  static create(options) {\n    const { width, height } = Screen.getViewportSize();\n    console.log(width, height);\n    const stage = new Stage({ ...options, width, height });\n    stage.init();\n    return stage;\n  }\n\n  /**\n   * @param {object} o\n   * @param {DOMElement} o.root\n   * @param {Number} o.width\n   * @param {Number} o.height\n   * @param {function} o.onWelcomeScreenClick\n   */\n  constructor({ root, onWelcomeScreenClick, width, height }) {\n    this.root = root;\n    this.mode = GAME_MODES.PENDING;\n    this.width = width;\n    this.height = height;\n    this.onWelcomeScreenClick = onWelcomeScreenClick;\n  }\n\n  get heightInCells() {\n    return this.field.heightInCells;\n  }\n\n  get widthInCells() {\n    return this.field.widthInCells;\n  }\n\n  get cellSize() {\n    return this.field.cellSize;\n  }\n\n  setMode(gameMode) {\n    this.mode = gameMode;\n    this.render();\n  }\n\n  getRandomCell() {\n    const col = Math.ceil(Math.random() * this.widthInCells - 1);\n    const row = Math.ceil(Math.random() * this.heightInCells - 1);\n    return { col, row };\n  }\n\n  isEat({ col, row }) {\n    return this.field.checkApple({ col, row });\n  }\n\n  updateApple() {\n    this.appleCoords = this.getRandomCell();\n  }\n\n  /**\n   *\n   * @param {Object} coords\n   * @param {number} coords.col\n   * @param {number} coords.row\n   */\n  renderApple() {\n    if (!this.appleCoords) {\n      this.updateApple();\n    }\n    this.field.renderApple(this.appleCoords);\n  }\n\n  /**\n   * @returns {DOMElement}\n   */\n  init() {\n    this.createCanvas();\n    this.render();\n  }\n\n  renderWelcomeScreen() {\n    this.welcomeScreen = WelcomeScreen.create({\n      canvas: this.canvas,\n      w: this.width,\n      h: this.height,\n      onClick: this.onWelcomeScreenClick\n    });\n  }\n\n  createCanvas() {\n    this.canvas = document.createElement('canvas');\n    this.canvas.width = this.width;\n    this.canvas.height = this.height;\n    this.canvas.style.border = '1px solid red';\n\n    this.root.appendChild(this.canvas);\n  }\n\n  render() {\n    switch (this.mode) {\n      case GAME_MODES.STARTED:\n        this.drawField();\n        this.renderApple();\n        this.drawScore();\n        break;\n      case GAME_MODES.PENDING: {\n        this.renderWelcomeScreen();\n        break;\n      }\n    }\n  }\n\n  drawScore() {\n    this.score = Score.create({ canvas: this.canvas, score: this.score });\n  }\n\n  drawField() {\n    this.field = GameField.create({\n      canvas: this.canvas,\n      width: this.width,\n      height: this.height\n    });\n  }\n}\n","export class Text {\n  /**\n   * @param {object} options\n   * @param {HTMLCanvasElement} options.root\n   */\n  static create(options) {\n    const score = new Text(options);\n    score.render();\n    return score;\n  }\n\n  /**\n   * @param {object} options\n   * @param {HTMLCanvasElement} options.root\n   */\n  constructor({\n    canvas,\n    x = 0,\n    y = 0,\n    w,\n    h = 22,\n    textContent,\n    color = 'red',\n    textAlign = 'left'\n  }) {\n    this.ctx = canvas.getContext('2d');\n    this.x = x;\n    this.y = y;\n    this.h = h;\n    this.w = w;\n    this.textColor = color;\n    this.textContent = textContent;\n    this.textAlign = textAlign;\n  }\n\n  render() {\n    this.ctx.fillStyle = this.textColor;\n    this.ctx.font = `${this.h}px Helvetica`;\n    this.ctx.textAlign = this.textAlign;\n    this.ctx.fillText(this.textContent, this.x, this.y + this.h);\n  }\n\n  setText(textContent) {\n    this.textContent = textContent;\n  }\n\n  setAlign(align) {\n    this.textAlign = align;\n  }\n\n  setColor(color) {\n    this.textColor = color;\n  }\n}\n","export const getCellColor = col => {\n  let color = 'white';\n  if (col % 2 === 0) {\n    color = 'white';\n  }\n  return color;\n};\n\nexport const normalizeScore = score => {\n  if (score < 10) {\n    return `00${score}`;\n  }\n  if (score < 100) {\n    return `0${score}`;\n  }\n  return `${score}`;\n};\n","import { Text } from './text';\n\nexport class WelcomeScreen {\n  static create(options) {\n    const screen = new WelcomeScreen(options);\n    screen.addEventListeners();\n    screen.render();\n    return screen;\n  }\n\n  constructor({ canvas, w, h, onClick }) {\n    this.canvas = canvas;\n    this.ctx = canvas.getContext('2d');\n    this.x = 0;\n    this.y = 0;\n    this.w = w;\n    this.h = h;\n    this.onClick = onClick;\n    this.clickHandler = this.clickHandler.bind(this);\n  }\n\n  render() {\n    this.drawBackground();\n    this.renderText();\n  }\n\n  renderText() {\n    this.text = Text.create({\n      canvas: this.canvas,\n      x: this.w / 2,\n      y: this.h / 2,\n      textContent: 'Start',\n      textAlign: 'center'\n    });\n  }\n\n  drawBackground() {\n    this.ctx.fillStyle = 'rgba(0,0,0, .2)';\n    this.ctx.fillRect(this.x, this.y, this.w, this.h);\n  }\n\n  clickHandler() {\n    this.onClick();\n    this.canvas.removeEventListener('click', this.clickHandler);\n  }\n\n  addEventListeners() {\n    this.canvas.addEventListener('click', this.clickHandler);\n  }\n}\n"],"sourceRoot":""}